import java.util.ArrayList;
import java.util.List;
import java.io.*;

public class Library {
    private final String ADDRESS;
    private ArrayList<Book> books = new ArrayList<Book>();


    public Library(String address) {
        this.ADDRESS = address;
    }

    public void addBook(Book book) {
        books.add(book);
    }

    private int get_count(String bookTitle) {
        int count = 0;

        for (int i = 0; i < books.size(); i++) {
            Book book = books.get(i);
            if (book.getTitle().equals(bookTitle)) {
                if (!book.borrowed == true) {
                    count++;
                }
            }
        }
        return count;
    }

    public void borrowBook(String bookTitle) {
        boolean find = false;
        boolean borrowed = false;
        
        int count = get_count(bookTitle);
        for (int i = 0; i < books.size(); i++) {
            Book book = books.get(i);
            count = get_count(bookTitle);
            if (book.getTitle().equals(bookTitle) && book.borrowed == false) {
                count--;
                find = true;
                book.rent(books.get(i));
                break;
            }
        }
        if (find)
            System.out.println("You successfully borrowed " + bookTitle + ", remaining copies are " + count);
        else {
            for(int i = 0; i< books.size(); i++){
                Book book = books.get(i);
                if (book.getTitle().equals(bookTitle) && book.borrowed == true)
                    borrowed = true;
            }
            if (borrowed)
                System.out.println("No more books are available.");
            else {
                System.out.println("No book in Catalog");
            }
        }
    }

    public void printAvailableBooks() {
        ArrayList<String> used = new ArrayList<String>();
        for (int i = 0; i < this.books.size(); i++) {
            Book book = books.get(i);
            int count = get_count(book.getTitle());
            if (!used.contains(book.getTitle())) {
                used.add(book.getTitle());
                System.out.println(book.getTitle() + ", remaining numbers of copies : " + count);
            }
        }
        if (used.isEmpty())
            System.out.println("No book in catalog");
    }



    public void printAddress() {
        System.out.println(ADDRESS);
    }

    public void returnBook(String bookTitle) {
        int count = 0;
        for (int i = 0; i < books.size(); i++) {
            Book book = books.get(i);
            if (book.getTitle().equals(bookTitle) && book.isBorrowed() == true) {
                    count++;
                    book.returned(book);

                    System.out.println("Returning " + bookTitle);
                    System.out.println("You successfully returned the book. The current copies of the books are : " + count);
                    break;
            }
        }

    }

    private List<String[]> readCSV(String filename) {
        List<String[]> data = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader(filename))) {
            String line;
            //when they did not finish reading the line
            while ((line = br.readLine()) != null) {
                // Split the line into an array of values using a comma as the delimiter
                String[] values = line.split(",");
                data.add(values);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return data;
    }

    public void addBooksFromCSV(String fileDirectory) {
        List<String[]> csvData = readCSV(fileDirectory);

        for (String[] row : csvData) {
            if (row.length >= 2) {
                String bookTitle = row[0];
                int count = Integer.parseInt(row[1]);

                // Create a Book object and add it to the library
                for (int i = 0; i < count; i++) {
                    Book book = new Book(bookTitle);
                    addBook(book);
                }
            }
        }
    }


}
